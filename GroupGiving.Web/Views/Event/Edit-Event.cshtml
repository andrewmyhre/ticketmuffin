@model GroupGiving.Web.Models.UpdateEventViewModel
@using GroupGiving.Web.Code

@{
    ViewBag.Title = "Edit";
}

@section css
{
<link rel="stylesheet" type="text/css" href="/markitup/skins/simple/style.css" />
<link rel="stylesheet" type="text/css" href="/markitup/sets/markDown/style.css" />
}

@section scripts
{
<script type="text/javascript" src="/markitup/jquery.markitup.js"></script>
<script type="text/javascript" src="/markitup/sets/markDown/set.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#Description').markItUp(markdownSettings);
        $('#AdditionalBenefits').markItUp(markdownSettings);
    });
</script>

<script type="text/javascript" src='http://maps.google.com/maps/api/js?sensor=false'></script>
<script type='text/javascript' src='/scripts/editevent.js'></script>
}


<h2>Edit</h2>
<p>Editing @Html.ActionLink(Model.Title, "Index", new {shortUrl=Model.ShortUrl})</p>
<div>
@{Html.ValidationSummary();}
</div>

@using (Html.BeginForm("UploadEventImage", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <fieldset>
        <legend>Event image</legend>
            @if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
            {
                <p>Currently: <img src="@Model.ImageUrl" style="max-width: 150px"/></p>
            }

            <label style="display:inline-block;width:200px">Choose an image to upload:</label>
            <input type="file" name="imageFile"/> <input type="submit" value="Upload"/>
            @Html.ValidationMessage("imageFile")
    </fieldset>
}

@using (Html.BeginForm())
{
    <fieldset>
        <legend>Basic Information</legend>
        <p>@Html.LabelFor(vm => vm.Title) @Html.EditorFor(vm => vm.Title) @Html.ValidationMessageFor(vm => vm.Title)</p>
        <p>@Html.LabelFor(vm => vm.ShortUrl) @Html.EditorFor(vm => vm.ShortUrl) @Html.ValidationMessageFor(vm=>vm.ShortUrl)</p>
        <p>@Html.LabelFor(vm => vm.Description) @Html.EditorFor(vm => vm.Description) @Html.ValidationMessageFor(vm => vm.Description)</p>
        <p>@Html.LabelFor(vm => vm.IsPrivate) @Html.EditorFor(vm => vm.IsPrivate) @Html.ValidationMessageFor(vm => vm.IsPrivate)</p>
        <p>@Html.LabelFor(vm => vm.IsFeatured) @Html.EditorFor(vm => vm.IsFeatured) @Html.ValidationMessageFor(vm => vm.IsFeatured)</p>
        <p>@Html.LabelFor(vm => vm.MinimumParticipants) @Html.EditorFor(vm => vm.MinimumParticipants) @Html.ValidationMessageFor(vm => vm.MinimumParticipants)</p>
        <p>@Html.LabelFor(vm => vm.MaximumParticipants) @Html.EditorFor(vm => vm.MaximumParticipants) @Html.ValidationMessageFor(vm => vm.MaximumParticipants)</p>
        <p>@Html.LabelFor(vm => vm.TicketPrice) @Html.EditorFor(vm => vm.TicketPrice) @Html.ValidationMessageFor(vm => vm.TicketPrice)</p>
        <p>@Html.LabelFor(vm => vm.Currency) @Html.DropDownListFor(vm=>vm.Currency, new SelectList(Enum.GetValues(typeof(GroupGiving.Core.Domain.Currency)), Model.Currency))</p>
        <p>@Html.LabelFor(vm => vm.AdditionalBenefits) @Html.EditorFor(vm => vm.AdditionalBenefits) @Html.ValidationMessageFor(vm => vm.AdditionalBenefits)</p>
        <p>@Html.LabelFor(vm => vm.SalesEndDateTime) @Html.EditorFor(vm => vm.SalesEndDateTime) @Html.ValidationMessageFor(vm => vm.SalesEndDateTime)</p>
    </fieldset>
    <fieldset>
        <legend>Place and Time</legend>
        <div id="map" style="width:300px;height:250px;float:right;"></div>
        <p>@Html.LabelFor(vm => vm.Venue) @Html.EditorFor(vm => vm.Venue) @Html.ValidationMessageFor(vm => vm.Venue)</p>
        <p>@Html.LabelFor(vm => vm.AddressLine) @Html.EditorFor(vm => vm.AddressLine) @Html.ValidationMessageFor(vm => vm.AddressLine)</p>
        <p>@Html.LabelFor(vm => vm.City) @Html.EditorFor(vm => vm.City) @Html.ValidationMessageFor(vm => vm.City)</p>
        <p>@Html.LabelFor(vm => vm.Postcode) @Html.EditorFor(vm => vm.Postcode) @Html.ValidationMessageFor(vm => vm.Postcode)</p>
        
        <p>
            @Html.LabelFor(vm => vm.Country) 
            <select name="Country" id="Country">
                <option selected="selected">United Kingdom</option>
                <option>Poland</option>
            </select>
            @Html.ValidationMessageFor(vm => vm.Country)
        </p>
        @Html.HiddenFor(vm=>vm.Latitude)
        @Html.HiddenFor(vm=>vm.Longitude)
        <p>@Html.LabelFor(vm => vm.PhoneNumber) @Html.EditorFor(vm => vm.PhoneNumber) @Html.ValidationMessageFor(vm => vm.PhoneNumber)</p>
        <p>@Html.LabelFor(vm => vm.StartDate) @Html.EditorFor(vm => vm.StartDate) @Html.ValidationMessageFor(vm=>vm.StartDate)</p>
        
    </fieldset>
    @Html.HiddenFor(vm => vm.Id)
    <input type="submit" value="Save Event Details" />
}