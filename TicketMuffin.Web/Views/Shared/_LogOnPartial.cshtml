@using TicketMuffin.Web.Code
@if(Request.IsAuthenticated) {
    <text>@Html.Content("Welcome back!", pageAddress: "global/header") [ <a href="@Url.Action("Index", "Account")">@Html.Content("Account", pageAddress:"global/header")</a> ]
    [ <a href="@Url.Action("SignOut", "Account")">@Html.Content("SIGN OUT", pageAddress:"global/header")</a> ] </text>
}
else
{
    @:[ <a href="#" id="showSignIn">@Html.Content("SIGN IN", pageAddress:"global/header")</a> ]
    @:[ <a href="@Url.Action("signup", "Account")">@Html.Content("SIGN UP", pageAddress: "global/header")</a> ]

    <div id="popup-signIn" style="display:none;">
        <form id="signin" action="@Url.Action("signin", "account")">
            <label for="emailaddress">@Html.Content("Username", pageAddress: "global/header"): </label><input type="text" name="emailaddress" /><br />
            <label for="password">@Html.Content("Password", pageAddress: "global/header"): </label><input type="password" name="password" /><br />
            <input type="hidden" name="returnurl" value="@(Request.QueryString["returnUrl"] ?? Request.Url.PathAndQuery)" />
            <span id="invalidCredentials" class="field-validation-error" 
            style="display:none;margin-left:0px">@Html.Content("We couldn't find an account matching those credentials", pageAddress: "global/header")</span>
            <a href="#" class="hide">@Html.Content("Cancel", pageAddress: "global/header")</a>
            <input type="submit" value="@Html.Content("Sign In", pageAddress: "global/header")" />
            <img id="login-progress" src="/Content/img/inprogress-green.gif" />
        </form>
        
    </div>
    
}
