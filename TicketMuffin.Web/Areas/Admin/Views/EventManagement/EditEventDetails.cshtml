@using TicketMuffin.Core.Domain
@using TicketMuffin.Web.Models
@model UpdateEventViewModel

@{
    ViewBag.Title = "Manage - " + Model.Title;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
<p>Editing @Html.ActionLink(Model.Title, "ManageEvent", new {Id=Model.Id.Substring(Model.Id.IndexOf('/')+1)})</p>
<div>
@{Html.ValidationSummary();}
</div>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>Basic Information</legend>
        <p>@Html.LabelFor(vm=>vm.EventOrganiser) @Html.EditorFor(vm=>vm.EventOrganiser) @Html.ValidationMessageFor(vm=>vm.EventOrganiser)</p>
        <p>@Html.LabelFor(vm => vm.Title) @Html.EditorFor(vm => vm.Title) @Html.ValidationMessageFor(vm => vm.Title)</p>
        <p>@Html.LabelFor(vm => vm.ShortUrl) @Html.EditorFor(vm => vm.ShortUrl, "shortUrl") @Html.ValidationMessageFor(vm=>vm.ShortUrl)</p>
        <p>@Html.LabelFor(vm => vm.Description) @Html.EditorFor(vm => vm.Description) @Html.ValidationMessageFor(vm => vm.Description)</p>
        <p>@Html.LabelFor(vm => vm.IsPrivate) @Html.EditorFor(vm => vm.IsPrivate) @Html.ValidationMessageFor(vm => vm.IsPrivate)</p>
        <p>@Html.LabelFor(vm => vm.IsFeatured) @Html.EditorFor(vm => vm.IsFeatured) @Html.ValidationMessageFor(vm => vm.IsFeatured)</p>
        <p>@Html.LabelFor(vm => vm.MinimumParticipants) @Html.EditorFor(vm => vm.MinimumParticipants) @Html.ValidationMessageFor(vm => vm.MinimumParticipants)</p>
        <p>@Html.LabelFor(vm => vm.MaximumParticipants) @Html.EditorFor(vm => vm.MaximumParticipants) @Html.ValidationMessageFor(vm => vm.MaximumParticipants)</p>
        <p>@Html.LabelFor(vm => vm.TicketPrice) @Html.EditorFor(vm => vm.TicketPrice) @Html.ValidationMessageFor(vm => vm.TicketPrice)</p>
        <p>@Html.LabelFor(vm => vm.Currency) @Html.DropDownListFor(vm => vm.Currency, new SelectList(Model.CurrencyOptions.Select(c=>c.Iso4217AlphaCode), Model.Currency))</p>
        <p>@Html.LabelFor(vm => vm.AdditionalBenefits) @Html.EditorFor(vm => vm.AdditionalBenefits) @Html.ValidationMessageFor(vm => vm.AdditionalBenefits)</p>
        <p>@Html.LabelFor(vm => vm.SalesEndDateTime) @Html.EditorFor(vm => vm.SalesEndDateTime) @Html.ValidationMessageFor(vm => vm.SalesEndDateTime)</p>
        <p>@Html.LabelFor(vm=>vm.State) @Html.DropDownListFor(vm=>vm.State, new SelectList(Enum.GetNames(typeof(EventState)), Model.State))</p>
    </fieldset>
    <fieldset>
        <legend>Place and Time</legend>
        <div id="map" style="width:300px;height:250px;float:right;"></div>
        <p>@Html.LabelFor(vm => vm.Venue) @Html.EditorFor(vm => vm.Venue) @Html.ValidationMessageFor(vm => vm.Venue)</p>
        <p>@Html.LabelFor(vm => vm.AddressLine) @Html.EditorFor(vm => vm.AddressLine) @Html.ValidationMessageFor(vm => vm.AddressLine)</p>
        <p>@Html.LabelFor(vm => vm.City) @Html.EditorFor(vm => vm.City) @Html.ValidationMessageFor(vm => vm.City)</p>
        <p>@Html.LabelFor(vm => vm.Postcode) @Html.EditorFor(vm => vm.Postcode) @Html.ValidationMessageFor(vm => vm.Postcode)</p>
        
        <p>
            @Html.LabelFor(vm => vm.Country) 
            <select name="Country" id="Country">
                <option selected="selected">United Kingdom</option>
                <option>Poland</option>
            </select>
            @Html.ValidationMessageFor(vm => vm.Country)
        </p>
        @Html.HiddenFor(vm=>vm.Latitude)
        @Html.HiddenFor(vm=>vm.Longitude)
        <p>@Html.LabelFor(vm => vm.PhoneNumber) @Html.EditorFor(vm => vm.PhoneNumber) @Html.ValidationMessageFor(vm => vm.PhoneNumber)</p>
        <p>@Html.LabelFor(vm => vm.StartDate) @Html.EditorFor(vm => vm.StartDate) @Html.ValidationMessageFor(vm=>vm.StartDate)</p>
        
    </fieldset>
    <input type="submit" value="Save Event Details" />
    @Html.ActionLink("Delete this event...", "DeleteEvent", new {id=Model.Id.Substring(Model.Id.IndexOf('/')+1)})
}
